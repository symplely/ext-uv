name: Linux

on: [push, pull_request]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        container:
        - {os: 'ubuntu:18.04', cli: 'DEBIAN_FRONTEND=noninteractive apt-get', dev: 'libuv1-dev php-dev', dep: 'apt-get install software-properties-common', pre: 'add-apt-repository ppa:ondrej/php -y'}
        - {os: 'ubuntu:latest', cli: 'apt-get', dev: 'libuv1-dev php-dev', dep: 'apt-get install software-properties-common', pre: 'add-apt-repository ppa:ondrej/php -y'}
        - {os: 'centos:7', cli: 'yum', dev: 'libuv-devel php-devel', dep: 'yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm https://rpms.remirepo.net/enterprise/remi-release-7.rpm', pre: "yum-config-manager --disable 'remi-php*' && yum-config-manager --enable remi-php80"}
        - {os: 'centos:latest', cli: 'dnf', dev: 'https://rpmfind.net/linux/centos/8.4.2105/PowerTools/x86_64/os/Packages/libuv-devel-1.40.0-1.el8.x86_64.rpm php-devel', dep: 'dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm https://rpms.remirepo.net/enterprise/remi-release-8.rpm', pre: 'dnf module reset php && dnf module install php:remi-8.0 -y'}
    runs-on: ubuntu-latest
    container: ${{ matrix.container.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP and Build tools
        run: |
          ${{ matrix.container.cli }} update -y
          ${{ matrix.container.dep }} -y
          ${{ matrix.container.pre }}
          ${{ matrix.container.cli }} install sudo git ${{ matrix.container.dev }} libtool php-pear -y

      - name: Build ext-uv
        run: |
            phpize
            ./configure --with-uv=$(readlink -f `pwd`/libuv)
            make
            make install
            echo "extension=uv.so" >> "$(php -r 'echo php_ini_loaded_file();')"

      - name: Run tests
        env:
          NO_INTERACTION: 1
        run: |
          php run-tests.php -p `which php` --offline --show-diff --set-timeout 120
          ls
